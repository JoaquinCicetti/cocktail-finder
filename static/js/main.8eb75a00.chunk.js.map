{"version":3,"sources":["serviceWorker.ts","components/AnimatedList/AnimatedList.tsx","hooks/useMediaQuery.ts","contexts/theme.tsx","hooks/useTheme.ts","components/App/App.tsx","components/Favorites/Favorites.tsx","components/Info/Info.tsx","components/MorphingIcon/Icons.ts","components/MorphingIcon/MorphingIcon.tsx","interfaces/ListReducer.ts","redux/actions.ts","components/Searcher/Searcher.tsx","components/ToggleButton/ToggleButton.tsx","redux/reducers/listReducer.ts","redux/store.ts","configs/firebase.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","List","posed","ul","exit","opacity","enter","transition","default","duration","beforeChildren","staggerChildren","AnimatedItem","a","Item","forwardRef","ref","children","key","className","onClick","AnimatedList","status","list","useState","selected","setSelected","firebase","useFirebase","initialPose","pose","map","cocktail","idDrink","strDrinkThumb","strDrink","strInstructions","strCategory","strGlass","e","thumb","id","push","timestamp","Date","getDate","catch","console","log","src","alt","getIngredients","i","index","name","measure","ingredients","Object","entries","forEach","value","indexOf","split","parseInt","useMediaQuery","Themes","voidContext","theme","dark","setTheme","ThemeContext","React","createContext","useTheme","useContext","toggleTheme","useCallback","newTheme","light","localStorage","setItem","App","useSelector","state","listReducer","checked","toggle","Favorites","useFirebaseConnect","favorites","ordered","length","fav","remove","Info","href","target","rel","Icons","sun","moon","drink","clear","searching","favorite","ActionTypes","morphTransition","from","to","tween","pipe","interpolate","Paths","reduce","paths","icon","d","Icon","path","MorphingIcon","height","width","viewBox","TIMESTAMP","getTime","clearCocktails","type","ListReducer","clearList","search","dispatch","getState","getFirebase","requestCocktails","payload","sent","fetch","then","response","json","cocktails","drinks","receiveCocktails","error","Searcher","filter","setFilter","useDispatch","inputRef","useRef","useEffect","current","focus","placeholder","onChange","event","title","ToggleButton","initialState","action","saving","saved","rootReducer","combineReducers","firebaseReducer","firestore","firestoreReducer","middlewares","thunk","withExtraArgument","store","createStore","compose","applyMiddleware","initializeApp","apiKey","authDomain","databaseURL","storageBucket","messagingSenderId","projectId","rrfProps","config","userProfile","createFirestoreInstance","ReactDOM","render","themeHandler","loadedTheme","getItem","Provider","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"4XAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oCCKAC,G,OAAOC,IAAMC,GAAG,CAClBC,KAAM,CACFC,QAAS,GAEbC,MAAO,CACHD,QAAS,EACTE,WAAY,CAAEC,QAAS,CAAEC,SAAU,MACnCC,gBAAgB,EAChBC,gBAAiB,QAGnBC,EAAeV,IAAMW,EAAE,CACzBT,KAAM,CACFC,QAAS,GAEbC,MAAO,CAAED,QAAS,KAGhBS,EAAOC,sBAAqB,WAAwCC,GAAS,IAA9CC,EAA6C,EAA7CA,SAAUC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,QAC3D,OACI,kBAACR,EAAD,CAAcM,IAAKA,EAAKF,IAAKA,EAAKG,UAAWA,EAAWC,QAASA,GAC5DH,MAwFEI,EAnFuB,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAAW,EACxBC,mBAAS,IADe,mBACjDC,EADiD,KACvCC,EADuC,KAElDC,EAAWC,wBAgBjB,OACI,yBAAKT,UAAU,gBACX,kBAAC,EAAD,MACY,YAAXG,EACG,kBAACrB,EAAD,CAAM4B,YAAY,OAAOC,KAAiB,YAAXR,EAAuB,QAAU,QAC5D,kBAAC,IAAD,KACKC,EAAKQ,KAAI,SAAAC,GAAa,IAEfC,EAMAD,EANAC,QACAC,EAKAF,EALAE,cACAC,EAIAH,EAJAG,SACAC,EAGAJ,EAHAI,gBACAC,EAEAL,EAFAK,YACAC,EACAN,EADAM,SAEEhB,EAASW,IAAYR,EAAW,WAAa,YACnD,OACI,kBAACX,EAAD,CACIK,UAAU,eACVD,IAAG,cAASe,GACZb,QAAS,SAACmB,GAAD,OAlCRC,EAkC2CN,QAlCvDO,EAkC8CR,KAjCpDR,EACPC,EAAY,KAEZA,EAAYe,GACZd,EACKX,IAAI,aACJ0B,KAAK,CAAEC,WAAW,IAAIC,MAAOC,UAAWL,UACxCM,OAAM,SAACP,GACJQ,QAAQC,IAAI,QAAST,QATjB,IAACE,EAAYD,IAmCD,yBAAKS,IAAKf,EAAegB,IAAKf,EAAUhB,UAAU,UAClD,yBAAKA,UAAS,sBAAiBG,IAC3B,uBAAGH,UAAU,SAASgB,GACtB,0BAAMhB,UAAS,uBAAkBG,IAC7B,8BAAOc,GACK,aAAXd,GACG,oCACI,2BACI,0BAAMH,UAAU,SAAhB,YACA,2BAAIkB,IAER,2BACI,0BAAMlB,UAAU,SAAhB,SACA,2BAAImB,IAER,0BAAMnB,UAAU,SAAhB,eACA,4BACKgC,EAAenB,GAAUD,KACtB,SAACqB,EAAgBC,GACb,OACI,wBACInC,IAAG,qBAAgBe,EAAhB,YAA2BoB,IAC7BD,EAAEE,KAFP,IAEcF,EAAEG,sBAgBpE,kBAAC,EAAD,CAAMjC,OAAQA,MAQxB6B,EAAiB,SAACnB,GAEpB,IAAMwB,EAAkC,GAmBxC,OAlBAC,OAAOC,QAAQ1B,GAAU2B,SAAQ,SAAAC,GAE7B,GAAIA,EAAM,GAAGC,QAAQ,kBAAoB,EAAG,CACxC,IAAM3C,EAAM0C,EAAM,GAAGE,MAAM,iBAAiB,GACtCR,EAAOM,EAAM,GACbP,EAAQU,SAAS7C,GACnBA,GAAOmC,GAAkB,OAATC,IAChBE,EAAYH,EAAQ,GAAK,CACrBC,OACAC,QAAS,UAEd,GAAIK,EAAM,GAAGC,QAAQ,eAAiB,EAAG,CAC5C,IAAM3C,EAAM0C,EAAM,GAAGE,MAAM,cAAc,GACnCP,EAAUK,EAAM,GAChBP,EAAQU,SAAS7C,GACnBA,GAAOmC,GAASG,EAAYH,EAAQ,KAAIG,EAAYH,EAAQ,GAAGE,QAAUA,OAG9EC,GC7IIQ,ICbVC,a,iBAAAA,E,cAQL,IAAMC,EAA4B,CAC9BC,MAAOF,EAAOG,KACdC,SAAU,SAAAF,MAERG,EAAeC,IAAMC,cAA4BN,GCKxCO,MAhBf,WAAqB,IAAD,EACYC,qBAAWJ,GAA/BH,EADQ,EACRA,MAAOE,EADC,EACDA,SAETM,EAAcC,uBAAY,WAC5B,IAAMC,EAAWV,IAAUF,EAAOa,MAAQb,EAAOG,KAAOH,EAAOa,MAC/DT,EAASQ,GAELE,cAAcA,aAAaC,QAAQ,QAASH,KACjD,CAACV,EAAOE,IAEX,MAAO,CACHF,QACAQ,cACAV,WCeOgB,G,OAlBO,WAAO,IAAD,EACeR,IAA/BN,EADgB,EAChBA,MAAOF,EADS,EACTA,OAAQU,EADC,EACDA,YADC,EAGCO,aAAY,SAACC,GAAD,MAA2B,CAC5D5D,KAAM4D,EAAMC,YAAY7D,KACxBD,OAAQ6D,EAAMC,YAAY9D,WAFtBC,EAHgB,EAGhBA,KAAMD,EAHU,EAGVA,OAId,OACI,yBAAKH,UAAWgD,IAAUF,EAAOG,KAAO,aAAe,eACnD,yBAAKjD,UAAU,aACX,kBAAC,EAAD,CAAckE,QAASlB,IAAUF,EAAOa,MAAOQ,OAAQX,IACvD,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcpD,KAAMA,EAAMD,OAAQA,QCH5CrB,G,OAAOC,IAAMC,GAAG,CAClBC,KAAM,CACFC,QAAS,GAEbC,MAAO,CACHD,QAAS,EACTE,WAAY,CAAEC,QAAS,CAAEC,SAAU,MACnCC,gBAAgB,EAChBC,gBAAiB,QAGnBC,EAAeV,IAAMW,EAAE,CACzBT,KAAM,CACFC,QAAS,GAEbC,MAAO,CAAED,QAAS,KAyCPkF,EAtCa,WACxBC,6BAAmB,aACnB,IAAM7D,EAAWC,wBACX6D,EAAYP,aAAY,SAACC,GAAD,OAA0BA,EAAMxD,SAAS+D,QAAQD,aAU/E,OACI,yBAAKtE,UAAU,iBACVsE,GAAaA,EAAUE,OACpB,kBAAC,EAAD,CAAM9D,YAAY,OAAOC,KAAM,SAC3B,kBAAC,IAAD,KACK2D,EAAU1D,KAAI,SAAC6D,EAAKvC,GACjB,OACI,kBAAC,EAAD,CAAcnC,IAAG,mBAAcmC,GAASlC,UAAU,YAC9C,yBACIC,QAAS,kBAjBxBqB,EAiB0CmD,EAAI1E,SAhB/DS,EACKX,IADL,oBACsByB,IACjBoD,SACA/C,OAAM,SAACP,GACJQ,QAAQC,IAAI,QAAST,MALb,IAACE,GAkBetB,UAAU,QACV8B,IAAK2C,EAAIhC,MAAMpB,cAQvC,wBChCDsD,G,OAjCe,SAAC,GAAgB,IAAdxE,EAAa,EAAbA,OAE7B,OACI,yBAAKH,UAAU,QACC,aAAXG,GAAyB,8CACd,UAAXA,GAAsB,2CACX,YAAXA,GACG,yBAAKH,UAAU,SACX,yBAAK8B,IAAG,UAPwC,mBAOxC,iBAA+BC,IAAI,OAAO/B,UAAU,SAC5D,uBAAGA,UAAU,WAAb,mBACA,6BACA,uBAAGA,UAAU,WAAb,kBACA,uBAAGA,UAAU,WAAb,gBACA,uBAAGA,UAAU,WAAb,sBACA,uBAAGA,UAAU,WAAb,sBACA,uBAAGA,UAAU,WAAb,qBACA,uBAAGA,UAAU,WAAb,qBACA,uBAAGA,UAAU,WAAb,qBAEA,6BACA,uBACIA,UAAU,UACV4E,KAAK,iCACLC,OAAO,SACPC,IAAI,uBAJR,W,wBCZLC,EAdD,CACVC,IACI,4ZACJC,KAAM,8DACNC,MACI,gGACJC,MACI,yMACJC,UACI,sKACJC,SACI,qM,qOCFR,ICRYC,EDQNC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAT,OAChCC,YAAM,CACFF,KAAM,EACNC,GAAI,EACJnG,SAAU,MACXqG,KAAKC,sBAAYJ,EAAMC,KAEpBI,EAAQvD,OAAOC,QAAQwC,GAAOe,QAAO,SAACC,EAAD,GAA0B,IAAD,mBAAhB5D,EAAgB,KAC9D6D,EAAO,CACTC,EAFgE,KAGhE7G,WAAYmG,GAEhB,O,yVAAO,CAAP,GAAYQ,EAAZ,eAAoB5D,EAAO6D,MAC5B,IAEGE,EAAOnH,IAAMoH,KAAKN,GAeTO,EARuB,SAAC,GAA6B,IAA3BJ,EAA0B,EAA1BA,KAAMK,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,MACnD,OACI,yBAAKtG,UAAU,eAAesG,MAAOA,EAAOD,OAAQA,EAAQE,QAAQ,aAChE,kBAACL,EAAD,CAAMvF,KAAMqF,O,SCjCZV,K,uBAAAA,E,sCAAAA,E,qCAAAA,E,gBAAAA,E,gBAAAA,M,KCIZ,IAAIkB,GAAY,IAAI/E,MAAOgF,UAGdC,EAAiB,iBAAO,CACjCC,KAAMC,EAAwBC,YAgBrBC,EAAS,SAClBrE,GADkB,OAE2C,SAC7DsE,EACAC,EACAC,GAGAF,EApB4B,SAACtE,GAAD,MAAoB,CAChDkE,KAAMC,EAAwBM,iBAC9BC,QAAS1E,GAkBAyE,CAAiBzE,IAC1B,IAAM2E,GAAO,IAAI3F,MAAOgF,UAExB,OAAOY,MAAM,4DAAD,OAA6D5E,IACpE6E,MAAK,SAACC,GACH,OAAOA,EAASC,UAEnBF,MAAK,SAACE,GArBiB,IAACC,EAsBjBjB,EAAYY,GACZxF,QAAQC,IAAI2F,EAAKE,QACjBX,GAxBiBU,EAwBSD,EAAKE,OAxBkB,CAC7Df,KAAMC,EAAwBe,iBAC9BR,QAASM,KAuBGjB,EAAYY,GAEZxF,QAAQC,IAAI,UAGnBF,OAAM,SAAAiG,GAAK,OAAIhG,QAAQC,IAAI,qBAAsB+F,QCT3CC,G,OAlCY,WAAO,IAAD,EACDxH,mBAAS,IADR,mBACtByH,EADsB,KACdC,EADc,KAEvBhB,EAAWiB,cACXC,EAAWC,iBAAyB,MAgB1C,OAHAC,qBAAU,WACFF,GAAiC,OAArBA,EAASG,SAAkBH,EAASG,QAAQC,UAC7D,IAEC,yBAAKrI,UAAU,YACX,2BACIsI,YAAY,gCACZ7F,MAAOqF,EACPS,SApBa,SAACC,GACtB,IAAM/F,EAAQ+F,EAAM3D,OAAOpC,MACvBA,EAAM+B,OAAS,EAAGuC,EAASD,EAAOrE,IAC5BA,EAAM+B,QAAQuC,EAASL,KACjCqB,EAAUtF,IAiBF5C,IAAKoI,IAET,4BAAQQ,MAAM,QAAQzI,UAAU,cAAcC,QAhBhC,SAACuI,GACnBzB,EAASL,KACTqB,EAAU,IACNE,GAAiC,OAArBA,EAASG,SAAkBH,EAASG,QAAQC,UAcpD,kBAAC,EAAD,CAAcrC,KAAM8B,EAAS,QAAU,kBCfxCY,G,OAXuB,SAAC,GAAyB,IAAvBxE,EAAsB,EAAtBA,QAASC,EAAa,EAAbA,OAI9C,OACI,4BAAQlE,QAJS,SAACuI,GAClBrE,KAG+BnE,UAAU,gBACrC,kBAAC,EAAD,CAAcsG,MAAO,GAAID,OAAQ,GAAIL,KAAM9B,EAAU,MAAQ,Y,4nBCZzE,IAAMyE,EAAkC,CACpCvI,KAAM,GACND,OAAQ,WAuCG8D,EApCK,WAA0E,IAAzED,EAAwE,uDAAhE2E,EAAcC,EAAkD,uCACzF,OAAQA,EAAOjC,MACX,KAAKC,EAAwBC,UACzB,MAAO,CACH1G,OAAQ,UACRC,KAAM,IAGd,KAAKwG,EAAwBe,iBACzB,MAAO,CACHvH,KAAMwI,EAAOzB,QAAUyB,EAAOzB,QAAU,GACxChH,OAAQyI,EAAOzB,SAAWyB,EAAOzB,QAAQ3C,OAAS,UAAY,SAGtE,KAAKoC,EAAwBM,iBACzB,OAAO,KACAlD,EADP,CAEI7D,OAAO,aAGf,KAAKyG,EAAwBiC,OACzB,OAAO,KACA7E,EADP,CAEI7D,OAAO,WAGf,KAAKyG,EAAwBkC,MACzB,OAAO,KACA9E,EADP,CAEI7D,OAAO,UAGf,QACI,OAAO6D,IC5Bb+E,EAAcC,YAAgB,CAChC/E,cACAzD,SAAUyI,kBACVC,UAAWC,qBAETC,EAAc,CAACC,IAAMC,kBAAkBrC,gBACvCsC,EAAQC,YAAYT,EAAaU,YAAQC,IAAe,WAAf,EAAmBN,KAElE5I,IAASmJ,cCnBQ,CACbC,OACI,2JACJC,WAAY,kCACZC,YAAa,yCACbC,cAAe,mCACfC,kBAAmB,gBACnBC,UAAW,oBDaf,IAAMC,EAAW,CACb1J,aACA2J,OCZc,CACdC,YAAa,SDYbrD,SAAUwC,EAAMxC,SAChBsD,mD,OEfJC,IAASC,OACL,kBAAC,IAAD,CAAUhB,MAAOA,GACb,mBdGwB,SAAC,GAAkB,IAAhBzJ,EAAe,EAAfA,SAAe,EACpBO,mBAASyC,EAAOG,MADI,mBACvCD,EADuC,KAChCE,EADgC,KAGxCsH,EAAe,CACjBxH,QACAE,YAUJ,OANAiF,qBAAU,WACN,GAAIvE,aAAc,CACd,IAAM6G,EAAc7G,aAAa8G,QAAQ,SACrCD,IAAgB3H,EAAOG,MAAQwH,IAAgB3H,EAAOa,OAAOT,EAASuH,MAE/E,IACI,kBAACtH,EAAawH,SAAd,CAAuBlI,MAAO+H,GAAe1K,KclBhD,KACI,kBAAC,6BAA+BoK,EAC5B,kBAAC,EAAD,SAIZU,SAASC,eAAe,SjBuHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM1D,MAAK,SAAA2D,GACjCA,EAAaC,kB","file":"static/js/main.8eb75a00.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { forwardRef, useState } from 'react';\nimport posed, { PoseGroup } from 'react-pose';\nimport { useDispatch } from 'react-redux';\nimport { useFirebase } from 'react-redux-firebase';\nimport { Info, Favorites } from '../';\nimport { Cocktail } from '../../interfaces/Cocktail';\nimport './AnimatedList.scss';\n\ninterface Props {\n    status: string;\n    list: Array<Cocktail>;\n}\ninterface Ingredients {\n    name: string;\n    measure: string;\n}\ninterface Favorite {\n    key: string;\n    value: {\n        id: string;\n        timestamp: number;\n    };\n}\nconst List = posed.ul({\n    exit: {\n        opacity: 0,\n    },\n    enter: {\n        opacity: 1,\n        transition: { default: { duration: 100 } },\n        beforeChildren: true,\n        staggerChildren: 120,\n    },\n});\nconst AnimatedItem = posed.a({\n    exit: {\n        opacity: 0,\n    },\n    enter: { opacity: 1 },\n});\n\nconst Item = forwardRef<any, any>(({ children, key, className, onClick }, ref) => {\n    return (\n        <AnimatedItem key={key} ref={ref} className={className} onClick={onClick}>\n            {children}\n        </AnimatedItem>\n    );\n});\n\nconst AnimatedList: React.FC<Props> = ({ status, list }) => {\n    const [selected, setSelected] = useState('');\n    const firebase = useFirebase();\n\n    const handleClick = (id: string, thumb: string) => {\n        if (id === selected) {\n            setSelected('');\n        } else {\n            setSelected(id);\n            firebase\n                .ref('favorites')\n                .push({ timestamp: new Date().getDate(), thumb })\n                .catch((e: string) => {\n                    console.log('error', e);\n                });\n        }\n    };\n\n    return (\n        <div className=\"animatedList\">\n            <Favorites />\n            {status === 'fetched' ? (\n                <List initialPose=\"exit\" pose={status === 'fetched' ? 'enter' : 'exit'}>\n                    <PoseGroup>\n                        {list.map(cocktail => {\n                            const {\n                                idDrink,\n                                strDrinkThumb,\n                                strDrink,\n                                strInstructions,\n                                strCategory,\n                                strGlass,\n                            } = cocktail;\n                            const status = idDrink === selected ? 'expanded' : 'collapsed';\n                            return (\n                                <Item\n                                    className=\"animatedItem\"\n                                    key={`item${idDrink}`}\n                                    onClick={(e: Event) => handleClick(idDrink, strDrinkThumb)}>\n                                    <img src={strDrinkThumb} alt={strDrink} className=\"image\" />\n                                    <div className={`description ${status}`}>\n                                        <p className=\"title\">{strDrink}</p>\n                                        <span className={`instructions ${status}`}>\n                                            <span>{strInstructions}</span>\n                                            {status === 'expanded' && (\n                                                <>\n                                                    <p>\n                                                        <span className=\"label\">Category</span>\n                                                        <b>{strCategory}</b>\n                                                    </p>\n                                                    <p>\n                                                        <span className=\"label\">Glass</span>\n                                                        <b>{strGlass}</b>\n                                                    </p>\n                                                    <span className=\"label\">Ingredients</span>\n                                                    <ul>\n                                                        {getIngredients(cocktail).map(\n                                                            (i: Ingredients, index: number) => {\n                                                                return (\n                                                                    <li\n                                                                        key={`ingredient_${idDrink}_${index}`}>\n                                                                        {i.name} {i.measure}\n                                                                    </li>\n                                                                );\n                                                            },\n                                                        )}\n                                                    </ul>\n                                                </>\n                                            )}\n                                        </span>\n                                    </div>\n                                </Item>\n                            );\n                        })}\n                    </PoseGroup>\n                </List>\n            ) : (\n                <Info status={status} />\n            )}\n        </div>\n    );\n};\n\nexport default AnimatedList;\n\nconst getIngredients = (cocktail: Cocktail) => {\n    // this is awful, like the API response\n    const ingredients: Array<Ingredients> = [];\n    Object.entries(cocktail).forEach(value => {\n        //key\n        if (value[0].indexOf('strIngredient') > -1) {\n            const key = value[0].split('strIngredient')[1];\n            const name = value[1];\n            const index = parseInt(key);\n            if (key && index && name !== null)\n                ingredients[index - 1] = {\n                    name,\n                    measure: '',\n                };\n        } else if (value[0].indexOf('strMeasure') > -1) {\n            const key = value[0].split('strMeasure')[1];\n            const measure = value[1];\n            const index = parseInt(key);\n            if (key && index && ingredients[index - 1]) ingredients[index - 1].measure = measure;\n        }\n    });\n    return ingredients;\n};\n","import { useLayoutEffect, useState } from 'react';\n\nfunction useMediaQuery(mediaQuery: string): boolean {\n    const initialValue = window.matchMedia(mediaQuery).matches;\n    const [matches, setMatches] = useState(initialValue);\n    useLayoutEffect(() => {\n        const mediaQueryList = window.matchMedia(mediaQuery);\n        const listener = (e: MediaQueryListEvent) => setMatches(e.matches);\n        mediaQueryList.addListener(listener);\n        return () => mediaQueryList.removeListener(listener);\n    }, [mediaQuery]);\n\n    return matches;\n}\nexport default useMediaQuery;\n","import React, { useState, useEffect } from 'react';\nenum Themes {\n    dark = 'dark',\n    light = 'light',\n}\ninterface ThemeContext {\n    theme: Themes.dark | Themes.light;\n    setTheme: (theme: Themes.dark | Themes.light) => void;\n}\nconst voidContext: ThemeContext = {\n    theme: Themes.dark,\n    setTheme: theme => {},\n};\nconst ThemeContext = React.createContext<ThemeContext>(voidContext);\n\nconst ThemeProvider: React.FC = ({ children }) => {\n    const [theme, setTheme] = useState(Themes.dark);\n\n    const themeHandler = {\n        theme,\n        setTheme,\n    };\n\n    // load last theme\n    useEffect(() => {\n        if (localStorage) {\n            const loadedTheme = localStorage.getItem('theme');\n            if (loadedTheme === Themes.dark || loadedTheme === Themes.light) setTheme(loadedTheme);\n        }\n    }, []);\n    return <ThemeContext.Provider value={themeHandler}>{children}</ThemeContext.Provider>;\n};\n\nexport { Themes, ThemeContext, ThemeProvider };\n","import { useContext, useCallback } from 'react';\nimport { ThemeContext, Themes } from '../contexts/theme';\nfunction useTheme() {\n    const { theme, setTheme } = useContext(ThemeContext);\n\n    const toggleTheme = useCallback(() => {\n        const newTheme = theme === Themes.light ? Themes.dark : Themes.light;\n        setTheme(newTheme);\n\n        if (localStorage) localStorage.setItem('theme', newTheme);\n    }, [theme, setTheme]);\n\n    return {\n        theme,\n        toggleTheme,\n        Themes,\n    };\n}\nexport default useTheme;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useTheme } from '../../hooks';\nimport { Searcher, ToggleButton } from '../';\nimport { AnimatedList } from '..';\nimport './App.scss';\nimport * as ListReducer from '../../interfaces/ListReducer';\ninterface FirebaseState {\n    \n    listReducer: ListReducer.State\n\n}\nconst App: React.FC = () => {\n    const { theme, Themes, toggleTheme } = useTheme();\n    \n    const { list, status } = useSelector((state: FirebaseState) => ({\n        list: state.listReducer.list,\n        status: state.listReducer.status,\n    }));\n    return (\n        <div className={theme === Themes.dark ? 'theme-dark' : 'theme-light'}>\n            <div className=\"container\">\n                <ToggleButton checked={theme === Themes.light} toggle={toggleTheme} />\n                <Searcher />\n                <AnimatedList list={list} status={status} />\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport posed, { PoseGroup } from 'react-pose';\nimport { useFirebaseConnect, useFirebase } from 'react-redux-firebase';\nimport { useSelector } from 'react-redux';\nimport './Favorites.scss';\n\ninterface Favorite {\n    key: string;\n    value: {\n        id: string;\n        timestamp: number;\n        thumb: string;\n    };\n}\ninterface FirebaseState {\n    firebase: {\n        ordered: {\n            favorites: Array<Favorite>;\n        };\n    };\n}\nconst List = posed.ul({\n    exit: {\n        opacity: 0,\n    },\n    enter: {\n        opacity: 1,\n        transition: { default: { duration: 100 } },\n        beforeChildren: true,\n        staggerChildren: 120,\n    },\n});\nconst AnimatedItem = posed.a({\n    exit: {\n        opacity: 0,\n    },\n    enter: { opacity: 1 },\n});\n\nconst Favorites: React.FC = () => {\n    useFirebaseConnect('favorites');\n    const firebase = useFirebase();\n    const favorites = useSelector((state: FirebaseState) => state.firebase.ordered.favorites);\n\n    const handleClick = (id: string) => {\n        firebase\n            .ref(`favorites/${id}`)\n            .remove()\n            .catch((e: string) => {\n                console.log('error', e);\n            });\n    };\n    return (\n        <div className=\"favoritesList\">\n            {favorites && favorites.length ? (\n                <List initialPose=\"exit\" pose={'enter'}>\n                    <PoseGroup>\n                        {favorites.map((fav, index) => {\n                            return (\n                                <AnimatedItem key={`favorite_${index}`} className=\"favorite\">\n                                    <img\n                                        onClick={() => handleClick(fav.key)}\n                                        className=\"thumb\"\n                                        src={fav.value.thumb}\n                                    />\n                                </AnimatedItem>\n                            );\n                        })}\n                    </PoseGroup>\n                </List>\n            ) : (\n                'Favorites not found'\n            )}\n        </div>\n    );\n};\n\nexport default Favorites;\n","import React from 'react';\nimport './Info.scss';\n\ninterface Props {\n    status: string;\n}\nconst Info: React.FC<Props> = ({ status }) => {\n    const urlPrefix = process.env.NODE_ENV === 'development' ? '' : '/cocktail-finder';\n    return (\n        <div className=\"info\">\n            {status === 'fetching' && <span>Searching...</span>}\n            {status === 'empty' && <span>No result</span>}\n            {status === 'initial' && (\n                <div className=\"about\">\n                    <img src={`${urlPrefix}/logo-256.png`} alt=\"logo\" className=\"logo\" />\n                    <b className=\"appName\">Cocktail Finder</b>\n                    <hr />\n                    <p className=\"version\">React: 16.10.2</p>\n                    <p className=\"version\">Redux: 4.0.4</p>\n                    <p className=\"version\">React-redux: 7.1.1</p>\n                    <p className=\"version\">Redux-thunk: 2.3.0</p>\n                    <p className=\"version\">Node-sass: 4.12.0</p>\n                    <p className=\"version\">React-pose: 4.0.9</p>\n                    <p className=\"version\">Typescript: 3.6.4</p>\n\n                    <hr />\n                    <a\n                        className=\"version\"\n                        href=\"https://www.thecocktaildb.com/\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\">\n                        API\n                    </a>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Info;\n","const Icons = {\n    sun:\n        'M62 30H47.9a15.9 15.9 0 0 0-3.2-7.8l10-10a2 2 0 0 0-2.8-2.8l-10 10a15.9 15.9 0 0 0-7.9-3.3V2a2 2 0 0 0-4 0v14.2a15.9 15.9 0 0 0-7.8 3.2l-10-10a2 2 0 1 0-2.8 2.8l10 10a15.9 15.9 0 0 0-3.2 7.8H2a2 2 0 1 0 0 4h14.2a15.9 15.9 0 0 0 3.2 7.8l-10 10a2 2 0 1 0 2.8 2.8l10-10a15.9 15.9 0 0 0 7.8 3.3V62a2 2 0 0 0 4 0V47.9a15.9 15.9 0 0 0 7.8-3.2l10 10a2 2 0 1 0 2.8-2.8l-10-10a15.9 15.9 0 0 0 3.3-7.9H62a2 2 0 1 0 0-4z',\n    moon: 'M33.9 11.9A16.8 16.8 0 0 1 12 35a20.1 20.1 0 1 0 21.9-23.1z',\n    drink:\n        'M60.7 2.7A1 1 0 0 0 60 1H4a1 1 0 0 0-.7 1.7L30 30v29H18a2 2 0 0 0 0 4h28a2 2 0 0 0 0-4H34V30z',\n    clear:\n        'M53.122 48.88L36.243 32l16.878-16.878a3 3 0 0 0-4.242-4.242L32 27.758l-16.878-16.88a3 3 0 0 0-4.243 4.243l16.878 16.88-16.88 16.88a3 3 0 0 0 4.243 4.241L32 36.243l16.878 16.88a3 3 0 0 0 4.244-4.243z',\n    searching:\n        'M61.122 56.88L41.54 37.284l-.037.037a22.01 22.01 0 1 0-4.173 4.175l-.031.031L56.878 61.12a3 3 0 0 0 4.244-4.242zM24 40a16 16 0 1 1 16-16 16.002 16.002 0 0 1-16 16z',\n    favorite:\n        'M32.8 58.9C45.4 57 64 34.4 64 22.6 64 13.5 57.2 7 48 7c-7.8 0-14.2 5.9-16 10.5C30.2 12.9 23.8 7 16 7 6.8 7 0 13.5 0 22.6 0 34.4 18.6 57 31.2 58.9a5.384 5.384 0 0 0 .8.1 3.217 3.217 0 0 1 .8-.1z',\n};\n\nexport default Icons;\n\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/d << this article saved my life\n","import React from 'react';\nimport posed from 'react-pose';\nimport { tween } from 'popmotion';\nimport { interpolate } from 'flubber';\nimport Icons from './Icons';\nimport './MorphingIcon.scss';\n\ntype Transition = ({ from, to }: { from: number; to: number }) => any;\n\nconst morphTransition: Transition = ({ from, to }) =>\n    tween({\n        from: 0,\n        to: 1,\n        duration: 250,\n    }).pipe(interpolate(from, to));\n\n    const Paths = Object.entries(Icons).reduce((paths, [name, path]) => {\n    const icon = {\n        d: path,\n        transition: morphTransition,\n    };\n    return { ...paths, [name]: icon };\n}, {});\n\nconst Icon = posed.path(Paths);\n\ninterface Props {\n    icon: string;\n    width?: number;\n    height?: number;\n}\nconst MorphingIcon: React.FC<Props> = ({ icon, height, width }) => {\n    return (\n        <svg className=\"morphingIcon\" width={width} height={height} viewBox=\"0 0 64 64\">\n            <Icon pose={icon} />\n        </svg>\n    );\n};\n\nexport default MorphingIcon;\n","import { Cocktail } from './Cocktail';\nexport enum ActionTypes {\n    clearList = 'CLEAR_LIST',\n    requestCocktails = 'REQUEST_COCTKTAILS',\n    receiveCocktails = 'RECIVE_COCTKTAILS',\n    saving = 'SAVING',\n    saved = 'SAVIED',\n}\nexport interface State {\n    list: Array<Cocktail>;\n    status: 'initial' | 'empty' | 'fetching' | 'fetched' | 'saving' | 'saved';\n}\nexport interface Action {\n    type:\n        | ActionTypes.clearList\n        | ActionTypes.requestCocktails\n        | ActionTypes.receiveCocktails\n        | ActionTypes.saving\n        | ActionTypes.saved;\n    payload?: Array<Cocktail>;\n}\n","import { Action } from 'redux';\nimport { ThunkAction } from 'redux-thunk';\nimport * as ListReducer from '../interfaces/ListReducer';\nimport { Cocktail, APIResponse } from '../interfaces/Cocktail';\n// avoid unsorted resolve of API request\nlet TIMESTAMP = new Date().getTime();\n\n// clear cocktail list\nexport const clearCocktails = () => ({\n    type: ListReducer.ActionTypes.clearList,\n});\n\n// set status\nexport const requestCocktails = (value: string) => ({\n    type: ListReducer.ActionTypes.requestCocktails,\n    payload: value,\n});\n\n// save fetched list\nexport const receiveCocktails = (cocktails: Array<Cocktail>) => ({\n    type: ListReducer.ActionTypes.receiveCocktails,\n    payload: cocktails,\n});\n\n// send search request\nexport const search = (\n    value: string,\n): ThunkAction<void, ListReducer.State, null, Action<string>> => (\n    dispatch,\n    getState,\n    getFirebase,\n) => {\n    // set status\n    dispatch(requestCocktails(value));\n    const sent = new Date().getTime();\n    // return a new promise\n    return fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${value}`)\n        .then((response: Response) => {\n            return response.json();\n        })\n        .then((json: APIResponse) => {\n            if (TIMESTAMP < sent) {\n                console.log(json.drinks);\n                dispatch(receiveCocktails(json.drinks));\n                TIMESTAMP = sent;\n            } else {\n                console.log('kkk');\n            }\n        })\n        .catch(error => console.log('An error occurred.', error));\n};\n\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { search, clearCocktails } from './../../redux/actions';\nimport { MorphingIcon } from '../';\nimport './Searcher.scss';\n\nconst Searcher: React.FC = () => {\n    const [filter, setFilter] = useState('');\n    const dispatch = useDispatch();\n    const inputRef = useRef<HTMLInputElement>(null);\n    const onSearcherChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\n        const value = event.target.value;\n        if (value.length > 2) dispatch(search(value));\n        else if (!value.length) dispatch(clearCocktails());\n        setFilter(value);\n    };\n\n    const clearSearcher = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        dispatch(clearCocktails());\n        setFilter('');\n        if (inputRef && inputRef.current !== null) inputRef.current.focus();\n    };\n    useEffect(() => {\n        if (inputRef && inputRef.current !== null) inputRef.current.focus();\n    }, []);\n    return (\n        <div className=\"searcher\">\n            <input\n                placeholder=\"Search your favorite cocktail\"\n                value={filter}\n                onChange={onSearcherChange}\n                ref={inputRef}\n            />\n            <button title=\"Clear\" className=\"clearButton\" onClick={clearSearcher}>\n                <MorphingIcon icon={filter ? 'clear' : 'searching'} />\n            </button>\n        </div>\n    );\n};\n\nexport default Searcher;\n","import React from 'react';\nimport { MorphingIcon } from '../';\nimport './ToggleButton.scss';\n\ninterface Props {\n    checked: boolean;\n    toggle: () => void;\n}\nconst ToggleButton: React.FC<Props> = ({ checked, toggle }) => {\n    const handleChange = (event: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n        toggle();\n    };\n    return (\n        <button onClick={handleChange} className=\"toggleButton\">\n            <MorphingIcon width={32} height={32} icon={checked ? 'sun' : 'moon'} />\n        </button>\n    );\n};\n\nexport default ToggleButton;\n\n//<label htmlFor=\"_toggleButton\" className={checked ? 'checked' : ''} />\n//<input id=\"_toggleButton\" type=\"checkbox\" checked={checked} onChange={handleChange} />\n","import * as ListReducer from '../../interfaces/ListReducer';\n\nconst initialState: ListReducer.State = {\n    list: [],\n    status: 'initial',\n};\n\nconst listReducer = (state = initialState, action: ListReducer.Action): ListReducer.State => {\n    switch (action.type) {\n        case ListReducer.ActionTypes.clearList: {\n            return {\n                status: 'initial',\n                list: [],\n            };\n        }\n        case ListReducer.ActionTypes.receiveCocktails: {\n            return {\n                list: action.payload ? action.payload : [],\n                status: action.payload && action.payload.length ? 'fetched' : 'empty',\n            };\n        }\n        case ListReducer.ActionTypes.requestCocktails: {\n            return {\n                ...state,\n                status: `fetching`,\n            };\n        }\n        case ListReducer.ActionTypes.saving: {\n            return {\n                ...state,\n                status: `saving`,\n            };\n        }\n        case ListReducer.ActionTypes.saved: {\n            return {\n                ...state,\n                status: `saved`,\n            };\n        }\n        default:\n            return state;\n    }\n};\nexport default listReducer;\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/firestore'; // make sure you add this for firestore\nimport { firebaseReducer } from 'react-redux-firebase';\nimport { createFirestoreInstance, firestoreReducer } from 'redux-firestore'; // <- needed if using firestore\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { getFirebase } from 'react-redux-firebase';\nimport listReducer from './reducers/listReducer';\nimport { rrfConfig, fbConfig } from '../configs/firebase';\n\nconst rootReducer = combineReducers({\n    listReducer,\n    firebase: firebaseReducer,\n    firestore: firestoreReducer, // <- needed if using firestore\n});\nconst middlewares = [thunk.withExtraArgument(getFirebase)];\nconst store = createStore(rootReducer, compose(applyMiddleware(...middlewares)));\n\nfirebase.initializeApp(fbConfig);\nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance, // <- needed if using firestore\n};\nexport { store, rrfProps };\n","// firebase config\nconst fbConfig = {\n    apiKey:\n        'AAAA7Tqa77E:APA91bEtStwP8blFilYk_Ujnm-Jg3iCTerGNz3aswwWH4yvUhbjIOE4STqfILWr-5fJZoYUDa9F1q9a6HwBAsjj9MYhpE7uoXYEvuPvDXNWc-KTrX49-LXQqAJ6xZBsWYeEoys9bATem',\n    authDomain: 'cocktail-finder.firebaseapp.com',\n    databaseURL: 'https://cocktail-finder.firebaseio.com',\n    storageBucket: 'gs://cocktail-finder.appspot.com',\n    messagingSenderId: '1018890481585',\n    projectId: 'cocktail-finder',\n};\n// react-redux-firebase config\nconst rrfConfig = {\n    userProfile: 'users',\n    // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n    // enableClaims: true // Get custom claims along with the profile\n};\nexport { fbConfig, rrfConfig };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport { App } from './components';\nimport { ThemeProvider } from './contexts/theme';\nimport { ReactReduxFirebaseProvider } from 'react-redux-firebase'\nimport {store, rrfProps} from './redux/store';\n\nimport './index.scss';\nReactDOM.render(\n    <Provider store={store}>\n        <ThemeProvider>\n            <ReactReduxFirebaseProvider {...rrfProps}>\n                <App />\n            </ReactReduxFirebaseProvider>\n        </ThemeProvider>\n    </Provider>,\n    document.getElementById('root'),\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}